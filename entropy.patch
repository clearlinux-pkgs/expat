making getrandom() block for hard entropy is overkill for 
hash table protection; even non-key-grade early entropy is enough
for this purpose, especially since early software isn't going to load
untrusted XML.


--- expat-2.2.2/lib/xmlparse.c~	2017-07-12 21:55:49.000000000 +0000
+++ expat-2.2.2/lib/xmlparse.c	2017-07-21 14:01:35.519097314 +0000
@@ -747,7 +747,7 @@
 writeRandomBytes_getrandom(void * target, size_t count) {
   int success = 0;  /* full count bytes written? */
   size_t bytesWrittenTotal = 0;
-  const unsigned int getrandomFlags = 0;
+  const unsigned int getrandomFlags = GRND_NONBLOCK;
 
   do {
     void * const currentTarget = (void*)((char*)target + bytesWrittenTotal);
